---
description: 
globs: 
alwaysApply: true
---
# 1
1. Общая часть (открытая часть Портала) с возможностью демонстрировать описание 
различных профессий в ИТ 
2. Регистрационная форма
3. Закрытая часть Портала: 
3.1. Администратора; 
3.2. Зарегистрированного пользователя; 
3.3. Эксперта, который может оценивать профессии в ИТ; 
3.4. Консультанта, который может провести консультацию зарегистрированного 
пользователя;

# 2
Используя html, css, как минимум (+php, MySQL - оптимальный вариант, + JavaScript – 
продвинутый вариант), разработать систему, которая позволяет: 
8.1. Хранить общий список профессионально важных качеств (ПВК, список 
предоставляется отдельно); 
8.2. Хранить список экспертов (в роли экспертов выступают студенты подгруппы). 
Расширенный вариант – управление списком экспертов; 
8.3. Вносить наименование профессии программиста и ее краткое описание, 
предусмотреть возможность управления списком профессий и их описаний (три 
профессии для подгруппы, студенты самостоятельно выбирают какие именно 
профессии будут описываться); 
8.4. Экспертам проводить оценку выбранных профессий с подбором профессионально 
важных качеств из списка. Выбирать не более 5-10 качеств. Средний вариант – 
возможность провести рейтинг среди выбранных ПВК для конкретной профессии 
для одного эксперта. Продвинутый вариант - провести рейтинги среди всех 
выбранных ПВК для конкретной профессии для всех экспертов, вынести гипотезу 
и/или реализовать механизм определения согласованных оценок групп экспертов 
и экспертов, оценки от которых не согласуются с остальными. Сверхзадача – 
предположить, как можно определить, кто вынес более верные/достоверные ПВК – группа экспертов с согласованными оценками или отдельные эксперты; 
8.5. Отображать результаты – профессия, описание, список ПВК для нее (средний 
вариант – отображать значимость ПВК, продвинутый вариант – отображать 
значимость ПВК с учетом согласованных/несогласованных оценок эксперта, 
посмотреть характеристику эксперта).

# 3
Используя html, css, как минимум (+php, MySQL - оптимальный вариант, + JavaScript – 
продвинутый вариант), разработать систему оценки простых и сложных 
сенсомоторных реакций человека (класс тестов в проекте – «Сенсомоторные 
реакции») 
3. Оценка простых сенсомоторных реакций человека: 
3.1. на свет 
3.2. на звук 
4. Оценка сложных сенсомоторных реакций человека: 
4.1. оценка скорости реакции на разные цвета (не менее 3-х цветов) 
4.2. оценка скорости реакции на сложный звуковой сигнал – сложение в уме 
(чет/нечет) 
4.3. оценка скорости реакции на сложение в уме (чет/нечет) - визуально 
5. Система должна позволять: 
5.1. Отображать прогресс выполнения теста; 
5.2. Хранить общий список респондентов; 
5.3. Хранить результаты тестирования; 
5.4. Смотреть динамику результатов одного респондента одного вида теста, который 
выполнялся несколько раз; 
5.5. Нормировать результаты с учетом пола, возраста +/– 5 лет по текущей выборке; 
5.6. Система отображения результатов тестирования для эксперта: 
5.6.1. Результаты отдельного теста 
5.6.2. Результаты динамики одного вида теста 
5.6.3. Результаты всех тестов 
5.7. Система отображения результатов тестирования для респондента (подумать зачем 
нужен этот пункт и в выводах отразить ответ): 
5.7.1. Результаты отдельного теста 
5.7.2. Результаты динамики одного вида теста 
5.7.3. Результаты всех тестов 
5.8. Возможность эксперту произвольно выбирать, какие тесты необходимо пройти 
респонденту и в каком порядке; 
5.9. Различные варианты регистрации пользователей/респондентов/экспертов – 
предложить и обосновать; 
5.10. 
Возможность проходить тестирование по ссылке-приглашению

# 4

Используя html, css, как минимум (+php, MySQL - оптимальный вариант, + JavaScript – 
продвинутый вариант), разработать систему оценки простых и сложных 
сенсомоторных реакций человека (класс тестов в проекте – «Реакция на движущийся 
объект») 
3. Оценка простой реакции человека на движущийся объект (варианты): 
3.1. Выбор времени выполнения (от 120 секунд до 45 минут) 
3.2. С отражением времени выполнения/или без; 
3.3. Отражением результата за минуту и в целом за тест/ без отражения; 
3.4. Отображение прогресса выполнения теста; 
3.5. Ускорение движения объекта – на сколько и через какой период времени и как 
часто; 
4. Оценка сложной реакции человека на движущиеся объекты: 
4.1. Выбор времени выполнения (от 120 секунд до 45 минут) 
4.2. С отражением времени выполнения/или без; 
4.3. Отражением результата за минуту и в целом за тест/ без отражения; 
4.4. Отображение прогресса выполнения теста; 
4.5. Ускорение движения объектов – на сколько и через какой период времени и как 
часто; 
5. Система должна позволять: 
5.1. Отображать прогресс выполнения теста; 
5.2. Хранить общий список респондентов; 
5.3. Хранить результаты тестирования; 
5.4. Смотреть динамику результатов одного респондента одного вида теста, который 
выполнялся несколько раз; 
5.5. Нормировать результаты с учетом пола, возраста +/– 5 лет по текущей выборке; 
5.6. Система отображения результатов тестирования для эксперта: 
5.6.1. Результаты отдельного теста 
5.6.2. Результаты динамики одного вида теста 
5.6.3. Результаты всех тестов 
5.7. Система отображения результатов тестирования для респондента (подумать зачем 
нужен этот пункт и в выводах отразить ответ): 
5.7.1. Результаты отдельного теста 
5.7.2. Результаты динамики одного вида теста 
5.7.3. Результаты всех тестов 
5.8. Возможность эксперту произвольно выбирать, какие тесты необходимо пройти 
респонденту и в каком порядке; 
5.9. Различные варианты регистрации пользователей/респондентов/экспертов – 
предложить и обосновать; 
5.10. 
Возможность проходить тестирование по ссылке-приглашению

# 5
Используя html, css, как минимум (+php, MySQL - оптимальный вариант, + JavaScript – 
продвинутый вариант), разработать систему оценки аналогового слежения и слежения 
с преследованием (класс тестов в проекте – «Слежение») 
3. Оценка аналогового слежения (варианты): 
3.1. Выбор времени выполнения (от 120 секунд до 45 минут) 
3.2. С отражением времени выполнения/или без; 
3.3. Отражением результата за минуту и в целом за тест/ без отражения; 
3.4. Отображение прогресса выполнения теста; 
3.5. Ускорение движения объекта – на сколько и через какой период времени и как 
часто (случайно или дискретно по времени); 
4. Оценка слежения с преследованием: 
4.1. Выбор времени выполнения (от 120 секунд до 45 минут) 
4.2. С отражением времени выполнения/или без; 
4.3. Отражением результата за минуту и в целом за тест/ без отражения; 
4.4. Отображение прогресса выполнения теста; 
4.5. Ускорение движения объектов – на сколько и через какой период времени и как 
часто (случайно или дискретно по времени); 
5. Система должна позволять: 
5.1. Отображать прогресс выполнения теста; 
5.2. Хранить общий список респондентов; 
5.3. Хранить результаты тестирования; 
5.4. Смотреть динамику результатов одного респондента одного вида теста, который 
выполнялся несколько раз; 
5.5. Нормировать результаты с учетом пола, возраста +/– 5 лет по текущей выборке; 
5.6. Система отображения результатов тестирования для эксперта: 
5.6.1. Результаты отдельного теста 
5.6.2. Результаты динамики одного вида теста 
5.6.3. Результаты всех тестов 
5.7. Система отображения результатов тестирования для респондента (подумать зачем 
нужен этот пункт и в выводах отразить ответ): 
5.7.1. Результаты отдельного теста 
5.7.2. Результаты динамики одного вида теста 
5.7.3. Результаты всех тестов 
5.8. Возможность эксперту произвольно выбирать, какие тесты необходимо пройти 
респонденту и в каком порядке; 
5.9. Различные варианты регистрации пользователей/респондентов/экспертов – 
предложить и обосновать; 
5.10. 
Возможность проходить тестирование по ссылке-приглашению 

# 6
Используя html, css, как минимум (+php, MySQL - оптимальный вариант, + JavaScript – 
продвинутый вариант), разработать систему оценки внимания, памяти и мышления 
(класс тестов в проекте – «Познавательные способности») 
3. Оценка внимание (выбрать 2-3 характеристики внимания, из представленных в этом 
пункте): 
3.1. переключаемость; 
3.2. объем; 
3.3. устойчивость; 
3.4. концентрация; 
3.5. распределение; 
3.6. сделать так, чтобы респондент не смог использовать какие-либо средства для 
помощи себе в выполнении теста (фото, видео, рисунки, мобильный телефон и 
т.д.) 
4. Оценка памяти (выбрать 2-3 направления для оценки памяти, из представленных в 
этом пункте): 
4.1. зрительная; 
4.2. звуковая; 
4.3. кратковременная; 
4.4. долговременная; 
4.5. оперативная; 
4.6. сделать так, чтобы респондент не смог использовать какие-либо средства для 
помощи себе в выполнении теста (фото, видео, рисунки, мобильный телефон и 
т.д.) 
5. Оценка мышления (выбрать 3-4 операции мышления, из представленных в этом 
пункте): 
5.1. сравнение 
5.2. анализ 
5.3. синтез 
5.4. абстракция 
5.5. конкретизация 
5.6. индукция 
5.7. дедукция 
5.8. классификация 
5.9. обобщение 
5.10. 
сделать так, чтобы респондент не смог использовать какие-либо средства 
для помощи себе в выполнении теста (фото, видео, рисунки, мобильный телефон и 
т.д.) 
6. Система должна позволять: 
6.1. Отображать прогресс выполнения теста; 
6.2. Управлять временем выполнения теста; 
6.3. Генерировать задания в произвольном режиме; 
6.4. Генерировать задания от простого к сложному 
6.4.1. очень простые 1/3 
6.4.2. средней сложности 1/3 
6.4.3. сложные 1/3 
14 
6.5. Оценивать результаты тестирования респондента с учетом сложности заданий 
6.6. Хранить общий список респондентов; 
6.7. Хранить результаты тестирования; 
6.8. Смотреть динамику результатов одного респондента одного вида теста, который 
выполнялся несколько раз; 
6.9. Нормировать результаты с учетом пола, возраста +/– 5 лет по текущей выборке; 
6.10. 
Система отображения результатов тестирования для эксперта: 
6.10.1. Результаты отдельного теста 
6.10.2. Результаты динамики одного вида теста 
6.10.3. Результаты всех тестов 
6.11. 
Система отображения результатов тестирования для респондента (подумать 
зачем нужен этот пункт и в выводах отразить ответ): 
6.11.1. Результаты отдельного теста 
6.11.2. Результаты динамики одного вида теста 
6.11.3. Результаты всех тестов 
6.12. 
Возможность эксперту произвольно выбирать, какие тесты необходимо 
пройти респонденту и в каком порядке; 
6.13. 
Различные варианты регистрации пользователей/респондентов/экспертов – 
предложить и обосновать; 
6.14. 
Возможность проходить тестирование по ссылке-приглашению 

# 7
Используя html, css, как минимум (+php, MySQL - оптимальный вариант, + JavaScript – 
продвинутый вариант), разработать систему, которая позволяет: 
2.1. для соответствующего ПВК определенной профессии программиста назначить 
соответствующий критерий оценки по результатам тестирования. Возможно 
объединение нескольких ПВК в один критерий оценки 
2.2. Критерий оценки – один или несколько оцениваемых показателях в одном и том 
же тесте или разных тестах 
2.3. Каждый показатель в критерии оценки может иметь свой вес и направление 
оценки (большие значения показателя – высокие результаты, низкие значения 
показателя – высокие результаты) 
2.4. Каждый показатель в критерии оценки может иметь минимально допустимые 
значения («Срез»), значения при которых меньше этого среза автоматически 
говорит о низком развитии всего критерия оценки не зависимо от результатов 
других показателей, даже если они хорошие 
2.5. Если для оцениваемой профессии программиста выбрано несколько критериев – 
то должна быть возможность придавать «Вес» каждому из них. 
3. Провести тестирование одно или нескольких респондентов (из студентов полгруппы) 
по батареи разработанных тестов с использованием нейроинтерфейса BioRadio или 
OpenBCI с измерением одного или нескольких показателей биоэлектрической 
активности человека для оценки физиологической цены деятельности: 
3.1. ЭКГ 
3.2. фотоплизмография с оценкой пульсовой волны 
3.3. ЭЭГ 
3.4. частоты дыхания 
4. По п.3 –  
4.1. провести запись фона – 2 минуты до тестирования 
4.2. провести запись во время тестирования – период тестирования 
4.3. провести запись фона – 2 минуты после тестирования 
4.4. Сохранить результаты 
4.5. Оценить как изменились показатели «до», «во время» и после. Пришли ли в 
исходное состояние показатели «после». 
